import numpy as np
import scipy
import scipy.linalg
import random

# X = np.array([[random.uniform(-1, 1) for i in range(10)] for j in range(8)])
# for i in range(8):
#     X[i] = X[i] / np.sqrt(np.dot(X[i], X[i]))
# k = 2
# length = len(X)
# length_mat = [[-1 for i in range(length)] for i in range(length)]
# for i in range(length):
#     for j in range(i + 1, length):
#         length_mat[i][j] = np.dot(X[i], X[j]) ** 2
#
# W = [[0 for i in range(length)] for i in range(length)]
#
# for i in range(length):
#     for j in range(k):
#         index = length_mat[i].index(max(length_mat[i]))
#         W[i][index] = 1
#         W[index][i] = 1
#         length_mat[i][index] = -1
X = np.array([[0.47392641, 0.37955054, -0.06922458, -0.25291206, -0.41157583,
               -0.29952515, -0.16248244, -0.44009587, 0.02768531, 0.28743209],
              [-0.42488907, -0.11112337, 0.49689412, -0.184624, -0.12040024,
               -0.11447475, 0.40643373, -0.41108131, -0.14279335, 0.3794262],
              [-0.28113593, -0.3877926, 0.05359917, -0.09790504, 0.54637446,
               -0.04026229, 0.38223472, 0.05022726, 0.55505089, -0.03560164],
              [-0.46310155, 0.28047672, 0.25009514, 0.20786269, 0.29428889,
               -0.45933462, -0.00404636, 0.44054842, 0.17915431, -0.27807461],
              [0.25308032, -0.25222847, 0.3986287, -0.28095868, -0.35731824,
               -0.01074865, 0.43764911, -0.39812118, -0.39174668, 0.05651536],
              [-0.34033166, 0.25574694, 0.01044637, -0.52326738, 0.10299179,
               -0.28317842, 0.28650009, -0.24595096, -0.43403834, 0.3508407],
              [0.08475583, -0.16118735, -0.43676866, 0.24962682, 0.21424616,
               -0.51408566, -0.43378741, -0.30398789, -0.31681911, 0.15038183],
              [-0.38500464, 0.14382886, -0.10212611, 0.2337746, 0.00625481,
               -0.49733028, 0.45405187, -0.49378076, 0.07884272, 0.24985824]])

W = np.array([[0, 0, 1, 1, 0, 0, 1, 1],
              [0, 0, 0, 0, 1, 1, 0, 0],
              [1, 0, 0, 1, 0, 0, 1, 0],
              [1, 0, 1, 0, 1, 0, 0, 1],
              [0, 1, 0, 1, 0, 1, 1, 0],
              [0, 1, 0, 0, 1, 0, 1, 1],
              [1, 0, 1, 0, 1, 1, 0, 1],
              [1, 0, 0, 1, 0, 1, 1, 0]])

D = np.array([[4, 0, 0, 0, 0, 0, 0, 0],
              [0, 2, 0, 0, 0, 0, 0, 0],
              [0, 0, 3, 0, 0, 0, 0, 0],
              [0, 0, 0, 4, 0, 0, 0, 0],
              [0, 0, 0, 0, 4, 0, 0, 0],
              [0, 0, 0, 0, 0, 4, 0, 0],
              [0, 0, 0, 0, 0, 0, 5, 0],
              [0, 0, 0, 0, 0, 0, 0, 4]])

L = D - W




def get_W_and_D(X, k):
    length = len(X)
    length_mat = [[-1 for i in range(length)] for i in range(length)]
    for i in range(length):
        for j in range(i + 1, length):
            length_mat[i][j] = np.dot(X[i], X[j]) ** 2

    W = [[0 for i in range(length)] for i in range(length)]

    for i in range(length):
        for j in range(k):
            index = length_mat[i].index(max(length_mat[i]))
            W[i][index] = 1
            W[index][i] = 1
            length_mat[i][index] = -1
